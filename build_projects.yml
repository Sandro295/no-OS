trigger:
- main
- master

pr:
- main
- master

variables:
- group: noos_releases_group_variables
- name: isMaster
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

jobs:
- job: Xilinx
  pool:
    name: Default
    demands:
      - agent.name -equals no-OS_xilinx
  steps:
  - checkout: self
    fetchDepth: 50
    submodules: true
    clean: true
    persistCredentials: true
  - script: 'python3 ./tools/scripts/build_projects.py . 
               -export_dir $(RELEASE_DIR)
               -log_dir $(LOG_DIR)
               -builds_dir /no-OS_builds/builds
               -platform xilinx
               -hdl_branch hdl_2021_r2'
    displayName: 'Run project build'
  - task: PublishPipelineArtifact@1
    timeoutInMinutes: 10
    condition: eq(variables.isMaster, true)
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(RELEASE_DIR)'
      artifact: '$(ARTIFACT_NAME)_Xilinx'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    condition: true
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(LOG_DIR)'
      artifact: 'logs_Xilinx_$(System.JobId)'
      publishLocation: 'pipeline'

- job: STM32
  pool:
    name: Default
    demands:
      - agent.name -equals no-OS
  steps:
  - checkout: self
    fetchDepth: 50
    submodules: true
    clean: true
    persistCredentials: true
  - script: 'python3 ./tools/scripts/build_projects.py .
               -export_dir $(RELEASE_DIR)
               -log_dir $(LOG_DIR)
               -builds_dir /no-OS_builds/builds
               -platform stm32
               -hdl_branch hdl_2021_r2'
    displayName: 'Run project build'
  - task: PublishPipelineArtifact@1
    timeoutInMinutes: 10
    condition: eq(variables.isMaster, true)
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(RELEASE_DIR)'
      artifact: '$(ARTIFACT_NAME)_STM32'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    condition: true
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(LOG_DIR)'
      artifact: 'logs_STM32_$(System.JobId)'
      publishLocation: 'pipeline'

- job: Maxim
  pool:
    name: Default
    demands:
      - agent.name -equals no-OS
  steps:
  - checkout: self
    fetchDepth: 50
    submodules: true
    clean: true
    persistCredentials: true
  - script: 'python3 ./tools/scripts/build_projects.py .
               -export_dir $(RELEASE_DIR)
               -log_dir $(LOG_DIR)
               -builds_dir /no-OS_builds/builds
               -platform maxim
               -hdl_branch hdl_2021_r2'
    displayName: 'Run project build'
  - task: PublishPipelineArtifact@1
    timeoutInMinutes: 10
    condition: eq(variables.isMaster, true)
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(RELEASE_DIR)'
      artifact: '$(ARTIFACT_NAME)_Maxim'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    condition: true
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(LOG_DIR)'
      artifact: 'logs_Maxim_$(System.JobId)'
      publishLocation: 'pipeline'

- job: Mbed
  pool:
    name: Default
    demands:
      - agent.name -equals no-OS
  steps:
  - checkout: self
    fetchDepth: 50
    submodules: true
    clean: true
    persistCredentials: true
  - script: 'python3 ./tools/scripts/build_projects.py .
               -export_dir $(RELEASE_DIR)
               -log_dir $(LOG_DIR)
               -builds_dir /no-OS_builds/builds
               -platform mbed
               -hdl_branch hdl_2021_r2'
    displayName: 'Run project build'
  - task: PublishPipelineArtifact@1
    timeoutInMinutes: 10
    condition: eq(variables.isMaster, true)
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(RELEASE_DIR)'
      artifact: '$(ARTIFACT_NAME)_Mbed'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    condition: true
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(LOG_DIR)'
      artifact: 'logs_Mbed_$(System.JobId)'
      publishLocation: 'pipeline'

- job: Pico
  pool:
    name: Default
    demands:
      - agent.name -equals no-OS
  steps:
  - checkout: self
    fetchDepth: 50
    submodules: true
    clean: true
    persistCredentials: true
  - script: 'python3 ./tools/scripts/build_projects.py .
               -export_dir $(RELEASE_DIR)
               -log_dir $(LOG_DIR)
               -builds_dir /no-OS_builds/builds
               -platform pico
               -hdl_branch hdl_2021_r2'
    displayName: 'Run project build'
  - task: PublishPipelineArtifact@1
    timeoutInMinutes: 10
    condition: eq(variables.isMaster, true)
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(RELEASE_DIR)'
      artifact: '$(ARTIFACT_NAME)_Pico'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    condition: true
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(LOG_DIR)'
      artifact: 'logs_Pico_$(System.JobId)'
      publishLocation: 'pipeline'

- job: ADuCM3029
  pool:
    name: Default
    demands:
      - agent.name -equals no-OS
  steps:
  - checkout: self
    fetchDepth: 50
    submodules: true
    clean: true
    persistCredentials: true
  - script: 'python3 ./tools/scripts/build_projects.py .
               -export_dir $(RELEASE_DIR)
               -log_dir $(LOG_DIR)
               -builds_dir /no-OS_builds/builds
               -platform aducm3029
               -hdl_branch hdl_2021_r2'
    displayName: 'Run project build'
  - task: PublishPipelineArtifact@1
    timeoutInMinutes: 10
    condition: eq(variables.isMaster, true)
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(RELEASE_DIR)'
      artifact: '$(ARTIFACT_NAME)_ADuCM3029'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    condition: true
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/$(LOG_DIR)'
      artifact: 'logs_ADuCM3029_$(System.JobId)'
      publishLocation: 'pipeline'
